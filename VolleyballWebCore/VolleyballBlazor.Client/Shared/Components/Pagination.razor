@typeparam TItem

<div>
    @foreach (var item in PaginatedList)
    {
        @ItemTemplate(item)
    }

    @if (PaginatedList.Count != 0)
    {
        <ul class="pagination d-flex justify-content-center">
            <li class="page-item">
                <button class="page-link" @onclick="(() => ChangePage(-1))">&laquo;</button>
            </li>

            @if (TotalPages <= 10)
            {
                @for (int i = 1; i <= TotalPages; i++)
                {
                    var pageNumber = i; // Capture the value of i
                    <li class="page-item @(pageNumber == CurrentPage ? "active" : "")">
                        <button class="page-link " @onclick="(() => ChangePage(pageNumber))">@i</button>
                    </li>
                }
            }
            else
            {
                // Display a maximum of 10 page numbers, centered around the current page
                var startPage = Math.Max(1, CurrentPage - 5);
                var endPage = Math.Min(startPage + 9, TotalPages);

                for (int i = startPage; i <= endPage; i++)
                {
                    var pageNumber = i; // Capture the value of i
                    <li class="page-item @(pageNumber == CurrentPage ? "active" : "")">
                        <button class="page-link " @onclick="(() => ChangePage(pageNumber))">@i</button>
                    </li>
                }
            }

            <li class="page-item">
                <button class="page-link" @onclick="(() => ChangePage(-2))">&raquo;</button>
            </li>
        </ul>
    }
</div>


@code {
    [Parameter]
    public List<TItem> Items { get; set; } = new List<TItem>();

    [Parameter]
    public RenderFragment<TItem> ItemTemplate { get; set; } = null!;

    [Parameter]
    public int PageSize { get; set; } = 10;

    private List<TItem> PaginatedList => Items.Skip((CurrentPage - 1) * PageSize).Take(PageSize).ToList();

    private int CurrentPage { get; set; } = 1;

    private int TotalPages => (int)Math.Ceiling((double)Items.Count / PageSize);

    private void ChangePage(int page)
    {
        if (page == -1 && CurrentPage > 1)
            CurrentPage--;
        else if (page == -2 && CurrentPage < TotalPages)
            CurrentPage++;
        else if (page > 0 && page <= TotalPages)
            CurrentPage = page;

    }
}