@page "/createMatch"
@inject IMatchOrganizerService matchOrganizerService

<EditForm Model="NewMatch" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <GenericForm Model="NewMatch" EditorClass="form-control">
        <FieldTemplate Context="field">
            <div class="form-group">
                <label for="@field.EditorId">@field.DisplayName</label>
                @field.EditorTemplate
                <p class="text-danger">@field.FieldValidationTemplate</p>
            </div>
        </FieldTemplate>


    </GenericForm>
</EditForm>
@code {
    public NewMatchModel NewMatch { get; set; } = new NewMatchModel();

    protected override async Task OnInitializedAsync()
    {
        var venuesResult = (await matchOrganizerService.GetVenues());
        if (venuesResult.Success)
        {
            NewMatch.VenueList = venuesResult.Data!;
        }

        var roundsResult = await matchOrganizerService.GetRounds();
        if (roundsResult.Success)
        {
            NewMatch.RoundList = roundsResult.Data!;
        }

        var leaguesResult = await matchOrganizerService.GetLeagues();
        if (leaguesResult.Success)
        {
            NewMatch.LeagueList = leaguesResult.Data!;
        }

        var refereesResult = await matchOrganizerService.GetReferees();
        if (refereesResult.Success)
        {
            NewMatch.RefereeList = refereesResult.Data!;
        }
    }

    public async Task OnSubmit()
    {

    }
}
